From: Alaa Hleihel <alaa@mellanox.com>
Subject: [PATCH] BACKPORT:
 drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c

Change-Id: Ieb943e7a1c838730511570c5fb8a829a605a4be3
---
 drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c
@@ -132,14 +132,14 @@ static struct sk_buff *mlx5e_test_get_ud
 	skb_reserve(skb, NET_IP_ALIGN);
 
 	/*  Reserve for ethernet and IP header  */
-	ethh = skb_push(skb, ETH_HLEN);
+	ethh = (struct ethhdr *)skb_push(skb, ETH_HLEN);
 	skb_reset_mac_header(skb);
 
 	skb_set_network_header(skb, skb->len);
-	iph = skb_put(skb, sizeof(struct iphdr));
+	iph = (struct iphdr *)skb_put(skb, sizeof(struct iphdr));
 
 	skb_set_transport_header(skb, skb->len);
-	udph = skb_put(skb, sizeof(struct udphdr));
+	udph = (struct udphdr *)skb_put(skb, sizeof(struct udphdr));
 
 	/* Fill ETH header */
 	ether_addr_copy(ethh->h_dest, priv->netdev->dev_addr);
@@ -167,7 +167,7 @@ static struct sk_buff *mlx5e_test_get_ud
 	ip_send_check(iph);
 
 	/* Fill test header and data */
-	mlxh = skb_put(skb, sizeof(*mlxh));
+	mlxh = (struct mlx5ehdr *)skb_put(skb, sizeof(*mlxh));
 	mlxh->version = 0;
 	mlxh->magic = cpu_to_be64(MLX5E_TEST_MAGIC);
 	strlcpy(mlxh->text, mlx5e_test_text, sizeof(mlxh->text));
@@ -216,7 +216,15 @@ mlx5e_test_loopback_validate(struct sk_b
 	if (iph->protocol != IPPROTO_UDP)
 		goto out;
 
+/* Some kernels backported skb_transport_header_was_set incorrectly,
+ * thus skb->transport_header is not always valid at this point.
+ * This fix will work for all kernels.
+ */
+#if 0
 	udph = udp_hdr(skb);
+#else
+	udph = (struct udphdr *)((void *)iph + sizeof(struct iphdr));
+#endif
 	if (udph->dest != htons(9))
 		goto out;
 
